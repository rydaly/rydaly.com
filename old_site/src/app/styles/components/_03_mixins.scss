/* Work Items Hover Effect */
@mixin work-hover-effect () {
   @include transition(opacity 0.3s $ease-in-out-quart, background-color 0.3s $ease-in-out-quart);
   -webkit-backface-visibility: hidden;
   -webkit-transform: translateZ(0);

  .lines {
    @include transition(opacity 0.1s  0.25s $ease-in-out-quart, width 0.35s $ease-in-out-quart, height 0.35s $ease-in-out-quart);
    -webkit-backface-visibility: hidden;
    -webkit-transform: translateZ(0);
  }

  &:after {
    content: '';
    opacity: 0;
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparentize($rd-medium-blue, 0.9);
    @include transition(opacity 0.6s $ease-out-sine);
    -webkit-backface-visibility: hidden;
    -webkit-transform: translateZ(0);
  }

  &:hover {
    .lines {
      @include transition(opacity 0.1s $ease-in-out-quart, width 0.35s $ease-in-out-quart, height 0.35s $ease-in-out-quart);
    }

    &:after {
      content: '';
      opacity: 1;
    }
  }
}
/* Border Lines Hover Effect */
@mixin border-hover-effect ( $include-symbol: true, $color: $rd-medium-blue, $bgcolor: $rd-gold, $color-hover: $rd-green, $bgcolor-hover: $rd-red, $border-size: 1px) {
  font-family: $sans-serif-2;
  position: relative;
  display: inline-block;
  font-weight: 700;
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 1.2px;
  padding: 10px 20px;
  outline: none;
  cursor: pointer;
  color: $color;
  background-color: white;
  border: none;
  @include transition(color 0.3s $ease-in-quart, background-color 0.3s $ease-in-quart);
  -webkit-backface-visibility: hidden;
  -webkit-transform: translateZ(0);

  .lines {
    position: absolute;
    background-color: $color-hover;
    box-sizing: content-box;
    @include transition(width 0.3s $ease-in-out-quart, height 0.3s $ease-in-out-quart);
    -webkit-backface-visibility: hidden;
    -webkit-transform: translateZ(0);

    &.top {
      top: -$border-size;
      left: -$border-size;
      height: $border-size;
      width: 0;
    }

    &.bottom {
      bottom: -$border-size;
      right: -$border-size;
      height: $border-size;
      width: 0;
    }

    &.left {
      bottom: -$border-size;
      left: -$border-size;
      height: 0;
      width: $border-size;
    }

    &.right {
      top: -$border-size;
      right: -$border-size;
      height: 0;
      width: $border-size;
    }
  }
  // include arrow if true
  @if $include-symbol == true {
    &:before {
      font-family: FontAwesome;
      content: '\f135';
      color: $color;
      display: inline-block;
      margin-right: 10px;
      margin-left: -5px;
      @include transition(color 0.3s $ease-in-out-quart, transform 0.3s $ease-in-out-quart);
      -webkit-backface-visibility: hidden;
      -webkit-transform: translateZ(0);
    }
  }

  &:hover {
    color: $color-hover;

    .top {
      width: 100%;
      padding-right: $border-size;
    }

    .bottom {
      width: 100%;
      padding-right: $border-size;
    }

    .left {
      height: 100%;
      padding-top: $border-size;
    }

    .right {
      height: 100%;
      padding-top: $border-size;
    }

    &:before {
      color: $color-hover;
      @include transform(translateX(3px));
    }
  }
  @include media($large-screen) {
    font-weight: 700;
    font-size: 16px;
  }
}
/* Close Button */
@mixin close-btn ( $is-fixed: true) {
   @if $is-fixed == true{
    @include position(fixed, 2em 2em null null);
  }
  @else {
     @include position(absolute, 1em 1em null null);
  }
  outline: none;
  width: 40px;
  height: 40px;
  background-color: $light-gray;
  cursor: pointer;
  z-index: 999999;
  -webkit-backface-visibility: hidden;
  -webkit-transform: translateZ(0);

  &:after,
  &:before {
    @include position(absolute, 0 0 0 50%);
    @include transform(rotate(45deg));
    @include size(0.15em 2em);
    background-color: $rd-gold;
    content: '';
    display: block;
    margin: 0 0 0 -1px;
    @include transition(background-color 0.25s ease-in-out, transform 0.25s ease-in-out);
    -webkit-backface-visibility: hidden;
  }

  &:hover:after,
  &:hover:before {
    background-color: $rd-red;
  }

  &:hover:after {
    @include transform(rotate(135deg));
  }

  &:hover:before {
    @include transform(rotate(-135deg));
  }

  &:before {
    @include transform(rotate(-45deg));
  }
  @include media($medium-screen) {
    background-color: transparent;
  }
}
/* Inset Border Lines Hover Effect */
@mixin inset-border-hover-effect ( $color-hover: $rd-medium-blue, $color-outer-hover: $rd-medium-blue, $border-size: 1px) {
  border: none;
  -webkit-backface-visibility: hidden;
  -webkit-transform: translateZ(0);

  .lines {
    position: absolute;
    background-color: $color-hover;
    box-sizing: content-box;
    z-index: 1;
    -webkit-backface-visibility: hidden;
    -webkit-transform: translateZ(0);

    @include transition(
      opacity 0.1s 0.25s $ease-in-out-quart,
      background-color 0.1s 0.25s $ease-in-out-quart,
      width 0.35s $ease-in-out-quart,
      height 0.35s $ease-in-out-quart
    );
    // inner
    &.top {
      top: $border-size;
      left: $border-size;
      height: $border-size * 1;
      width: 0;
      opacity: 0;
    }

    &.bottom {
      bottom: $border-size;
      right: $border-size;
      height: $border-size * 1;
      width: 0;
      opacity: 0;
    }

    &.left {
      bottom: $border-size;
      left: $border-size;
      height: 0;
      width: $border-size * 1;
      opacity: 0;
    }

    &.right {
      top: $border-size;
      right: $border-size;
      height: 0;
      width: $border-size * 1;
      opacity: 0;
    }
    // outer
    &.outer-top {
      top: 0;
      left: 0;
      height: $border-size;
      width: 0;
      opacity: 0;
    }

    &.outer-bottom {
      bottom: 0;
      right: 0;
      height: $border-size;
      width: 0;
      opacity: 0;
    }

    &.outer-left {
      bottom: 0;
      left: 0;
      height: 0;
      width: $border-size;
      opacity: 0;
    }

    &.outer-right {
      top: 0;
      right: 0;
      height: 0;
      width: $border-size;
      opacity: 0;
    }
  }

  &:hover {
    color: $color-hover;

    .lines {
      @include transition(
        opacity 0.1s $ease-in-out-quart,
        width 0.35s $ease-in-out-quart,
        height 0.35s $ease-in-out-quart,
        background-color 0.35s $ease-in-out-quart,
        top 0.35s $ease-in-out-quart,
        right 0.35s $ease-in-out-quart,
        bottom 0.35s $ease-in-out-quart,
        left 0.35s $ease-in-out-quart
      );
    }
    // inner
    .top {
      width: calc(100% - #{$border-size} * 1);
      padding-right: $border-size;
      opacity: 1;
    }

    .bottom {
      width: calc(100% - #{$border-size} * 1);
      padding-right: $border-size;
      opacity: 1;
    }

    .left {
      height: calc(100% - #{$border-size} * 1);
      padding-top: $border-size;
      opacity: 1;
    }

    .right {
      height: calc(100% - #{$border-size} * 1);
      padding-top: $border-size;
      opacity: 1;
    }
    // outer
    .outer-top {
      background-color: $color-outer-hover;
      width: 100%;
      padding-right: 0;
      z-index: 2;
      opacity: 1;
    }

    .outer-bottom {
      background-color: $color-outer-hover;
      width: 100%;
      padding-right: 0;
      z-index: 2;
      opacity: 1;
    }

    .outer-left {
      background-color: $color-outer-hover;
      height: 100%;
      padding-top: 0;
      z-index: 2;
      opacity: 1;
    }

    .outer-right {
      background-color: $color-outer-hover;
      height: 100%;
      padding-top: 0;
      z-index: 2;
      opacity: 1;
    }

    &:before {
      @include transform(translateX(3px));
    }
  }
  @include media($large-screen) {
    font-weight: 700;
    font-size: 16px;
  }
}
/* Typography */
@mixin small-caps($color) {
  color: $color;
  font-weight: 600;
  font-size: 1em;
  text-transform: uppercase;
}
@mixin symbol-surround($sym-before, $sym-after) {
  &:after,
  &:before {
    content: '';
    font-family: FontAwesome;
    display: inline-block;
    position: absolute;
    font-size: 1.1em;
    color: $rd-gold;
  }
  @include media($medium-screen) {
    &:before {
      content: $sym-before;
      @include transform(translateX(-1.48em));
    }

    &:after {
      content: $sym-after;
      @include transform(translateX(1em));
    }
  }
}
@mixin badge($color: $rd-sandy) {
  background-color: lighten($base-background-color, 2%);
  border-top: 1px solid lighten($color, 50%);
  display: inline-block;
  line-height: 1em;
  padding: 0.6em 1.2em;
  color: darken($color, 0%);
  font-size: 0.9em;

  a {
    color: darken($color, 0%);
  }
}
